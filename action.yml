---
name: Markdownlint
description: Lints markdown files.

inputs:
  files:
    description: TODO
    required: false
    default: '**.md'

  path:
    description: TODO
    required: false
    default:  ${{ github.workspace }}

  args:
    description: >
      Additional command-line arguments. TODO
    required: false

runs:
  using: "composite"
  steps:
    - name: Install markdownlint-cli
      shell: bash
      run: |
          echo "##[group]Install markdownlint-cli"

          echo "##[command]markdownlint-cli --version"

          npx markdownlint-cli --version

          echo "##[endgroup]"
      
    - name: Run markdownlint-cli
      shell: bash
      id: run
      run: |
        npx markdownlint-cli ${{ inputs.args }} -- ${{ inputs.files }} | awk -F'\n: ' '
          {print $0}
          /^[a-zA-Z0-9_\\.-]+:[0-9]+:[0-9]+ MD[0-9]{3}\/[a-z\-]+ (.*)$/ {
              split($0, arr, " ")
              split(arr[1], part, ":")

              # ::warning file={name},line={line},col={col}::{message}
              printf "::warning file=%s,line=%s,col=%s::%s %s\n", part[1], part[2], part[3], arr[2], substr($0, length(arr[1])+1+length(arr[2])+1+1)
          }
          
          
          /^[a-zA-Z0-9_\\.-]+:[0-9]+ MD[0-9]{3}\/[a-z\-]+ (.*)$/ {
              split($0, arr, " ")
              split(arr[1], part, ":")

              # ::warning file={name},line={line},col={col}::{message}
              printf "::warning file=%s,line=%s::%s %s\n", part[1], part[2], arr[2], substr($0, length(arr[1])+1+length(arr[2])+1+1)
          }'

      working-directory: ${{ inputs.path }}

branding:
  icon:  check-circle
  color: red